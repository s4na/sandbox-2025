name: Unity Static Analysis & Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Cache Unity Library
      uses: actions/cache@v4
      with:
        path: unity-repo-example/Library
        key: Library-${{ hashFiles('unity-repo-example/Assets/**', 'unity-repo-example/Packages/**', 'unity-repo-example/ProjectSettings/**') }}
        restore-keys: |
          Library-
          
    - name: Static analysis & format check
      working-directory: unity-repo-example
      run: |
        echo "Running dotnet format check..."
        dotnet format . --verify-no-changes
        
        echo "Running static analysis..."
        dotnet build . -c Release -warnaserror

  unity-build:
    name: Unity Build Test
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Cache Unity Library
      uses: actions/cache@v4
      with:
        path: unity-repo-example/Library
        key: Library-${{ hashFiles('unity-repo-example/Assets/**', 'unity-repo-example/Packages/**', 'unity-repo-example/ProjectSettings/**') }}
        restore-keys: |
          Library-
          
    # Unity 2022.3 LTS でのビルドテスト
    - name: Unity Build
      uses: game-ci/unity-builder@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        projectPath: unity-repo-example
        targetPlatform: StandaloneWindows64
        versioning: Semantic
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unity-build
        path: build/
        retention-days: 1

  vrchat-compatibility:
    name: VRChat Compatibility Check
    runs-on: ubuntu-latest
    needs: code-quality
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: VRChat/Udon compatibility check
      working-directory: unity-repo-example
      run: |
        echo "Checking VRChat/Udon compatibility..."
        # UdonAnalyzer が実装されている場合はここで実行
        # 現在はプレースホルダーとして基本的なチェックのみ
        dotnet build . -c Release -p:DefineConstants="VRCHAT;UDON"